name: CI input output kernels 

on:
  push:
    branches:
      - main
    paths:
      - 'src/cb.txt'

permissions:
    contents: write

jobs:
  job_name:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: run code
        run: |
          # ---------------------------------------
          # Print file contents
          echo "FILE_CONTENTS = ";
          cat src/cb.txt;
          # ---------------------------------------
          # Select the all the rows/lines except the last row/line
          # head = maximum rows/lines to select + 1 = (n-1) + 1 = n
          # tail = (head) - (desired row/line to start at) = n - 0 = n
          n=$(cat src/cb.txt | wc -l);
          CODE=$(cat src/cb.txt | head -n $n);
          # OR
          # CODE=$(cat src/cb.txt | head -n $n | tail -n $n);
          echo "CODE = $CODE";
          # ---------------------------------------
          # Select the last row/line
          KERNEL=$(cat src/cb.txt | tail -n 1);
          echo "KERNEL = $KERNEL";
          # ---------------------------------------
          # Remove the input file from the repository
          rm -rf src/cb.txt;
          repoOwner=$(echo "${{ github.repository }}" | cut -d '/' -f 1);
          repoName=$(echo "${{ github.repository }}" | cut -d '/' -f 2);
          repoOwnerEmail="j622amilah@gmail.com";
          git config --global user.email ${repoOwnerEmail};
          git config --global user.name ${repoOwner};
          git pull origin main;
          git checkout main;
          git branch --set-upstream-to origin/main;
          git merge main --ff-only;
          git add /home/runner/work/$repoName/$repoName/src/cb.txt; 
          git diff-index --quiet HEAD || git commit -m "add files" --allow-empty;
          git push;
          # ---------------------------------------
          # Parse the text and save to out.py
          # cat > out.py <<EOF ${CODE@Q} EOF
          # python out.py
          # ---------------------------------------
          # output=$(python < $file)
          # echo "output = $output";
          # ---------------------------------------
          echo $CODE  > out.py;
          output=$(python out.py)
          echo "output = $output";
          # ---------------------------------------

    
          
