<!DOCTYPE html>
<html>
<head></head>
<body>

<button id="run_selection_NN" onclick="run_selection_NN()">run_selection_NN</button>

<div id="output">

<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest"></script>

<script>

var epochs = 1;
var lr = 0.001;

async function run_selection_NN() {
   
  // Train a Neural Network.
  await train_model(lr, epochs);
}


var rows = 10;
var cols = 32;
const layer_num1 = 2;
const w0 = tf.variable(tf.randomNormal([layer_num1, rows]));



async function train_model(lr, epochs) {

  var xs = [];
  for (var i=0; i<rows; i++) {
    if (i%2 == 0) {
      var label0_sample = Array.from({length:cols}, (x) => Math.random());
      xs.push(label0_sample);
    } else {
      var label1_sample = Array.from({length:cols}, (x) => 10*Math.random());
      xs.push(label1_sample);
    }
  }
  var x = tf.variable(tf.tensor(xs, [rows, cols])); //initial value 
  document.getElementById("output").innerHTML += "x.shape: "+x.shape+"<br>";


  const optimizer = tf.train.adam(lr);
  document.getElementById("output").innerHTML += "optimizer: "+optimizer+"<br>";
 
  for (var i=0; i<epochs; i++) { 
   
    document.getElementById("output").innerHTML += "i: "+i+"<br>";

    var y = optimizer.minimize(() => model(x), true, [x]);
    // OR
    // var y = model(x);

    if (i%1 == 1){ 
      document.getElementById("output").innerHTML += "y: "+y+"<br>";
    }
  }

}


function model(x) {
  return tf.matMul(w0, x);
}


</script>
</body>
</html>