var x = [0, 0, 1, 3];
var y = [0, 1, 1, 0];


// [0] Find the one-norm between all point combinations
var n = x.length;
console.log("n: ", n);

var pt_name = x.map((val, ind) => { return ind; });
console.log("pt_name: ", pt_name);

var pt_tuple_arr = [];
var pt_value_arr = [];

for (var i=0; i<n; i++) {
   for (var j=(i+1); j<n; j++) {
     pt_tuple_arr.push([i, j]);
     // console.log("pt_tuple_arr: ", pt_tuple_arr);

     var one_norm = Math.abs(x.at(i) - x.at(j)) + Math.abs(y.at(i) - y.at(j));
     // console.log("one_norm: ", one_norm);

     pt_value_arr.push(one_norm);
   }
}
console.log("pt_tuple_arr: ", pt_tuple_arr);
console.log("pt_value_arr: ", pt_value_arr);

for (var pt=0; pt<n; pt++) {
console.log("pt: ", pt);

var pt_present_across_tuple = pt_tuple_arr.map((val, ind) => {
  var out = val.map((v, i) => { return v == pt ? true : ""; }).filter((x) => x.length > 0);
  out = [... new Set(out)];
  return out.length > 0 ? val : "";
});
   console.log("pt_present_across_tuple: ", pt_present_across_tuple);
   
var pt_present_value = pt_present_across_tuple.map((val, ind) => {
  var index = pt_tuple_arr.findIndex((ele) => ele == val);
  return pt_value_arr.at(index);
})
console.log("pt_present_value", pt_present_value);

}
javascript