input_lstm0:  SymbolicTensor {
  dtype: 'float32',
  shape: [ 1, 64, 32 ],
  sourceLayer: LSTM {
    _callHook: null,
    _addedWeightNames: [],
    _stateful: false,
    id: 2,
    activityRegularizer: null,
    inputSpec: [ [InputSpec] ],
    supportsMasking: true,
    _trainableWeights: [],
    _nonTrainableWeights: [],
    _losses: [],
    _updates: [],
    _built: true,
    inboundNodes: [ [Node] ],
    outboundNodes: [],
    name: 'lstm_LSTM1',
    trainable_: true,
    batchInputShape: [ null, 64, 1 ],
    dtype: 'float32',
    initialWeights: null,
    _refCount: 1,
    fastWeightInitDuringBuild: false,
    cell: LSTMCell {
      _callHook: null,
      _addedWeightNames: [Array],
      _stateful: false,
      id: 1,
      activityRegularizer: null,
      inputSpec: null,
      supportsMasking: false,
      _trainableWeights: [Array],
      _nonTrainableWeights: [],
      _losses: [],
      _updates: [],
      _built: true,
      inboundNodes: [],
      outboundNodes: [],
      name: 'lstm_cell_LSTMCell1',
      trainable_: true,
      batchInputShape: [Array],
      dtype: 'float32',
      initialWeights: null,
      _refCount: null,
      fastWeightInitDuringBuild: false,
      DEFAULT_ACTIVATION: 'tanh',
      DEFAULT_RECURRENT_ACTIVATION: 'hardSigmoid',
      DEFAULT_KERNEL_INITIALIZER: 'glorotNormal',
      DEFAULT_RECURRENT_INITIALIZER: 'orthogonal',
      DEFAULT_BIAS_INITIALIZER: 'zeros',
      units: 32,
      activation: Relu {},
      recurrentActivation: HardSigmoid {},
      useBias: true,
      kernelInitializer: [GlorotNormal],
      recurrentInitializer: [Orthogonal],
      biasInitializer: Zeros {},
      unitForgetBias: undefined,
      kernelRegularizer: null,
      recurrentRegularizer: null,
      biasRegularizer: null,
      kernelConstraint: null,
      recurrentConstraint: null,
      biasConstraint: null,
      dropout: 0,
      recurrentDropout: 0,
      dropoutFunc: undefined,
      implementation: undefined,
      stateSize: [Array],
      dropoutMask: null,
      recurrentDropoutMask: null,
      kernel: [LayerVariable],
      recurrentKernel: [LayerVariable],
      bias: [LayerVariable]
    },
    returnSequences: true,
    returnState: false,
    goBackwards: false,
    unroll: false,
    stateSpec: [ [InputSpec], [InputSpec] ],
    states_: null,
    numConstants: null,
    keptStates: []
  },
  inputs: [
    SymbolicTensor {
      dtype: 'float32',
      shape: [Array],
      sourceLayer: [InputLayer],
      inputs: [],
      callArgs: {},
      outputTensorIndex: undefined,
      id: 0,
      originalName: 'input1',
      name: 'input1',
      rank: 3,
      nodeIndex: 0,
      tensorIndex: 0
    }
  ],
  callArgs: {},
  outputTensorIndex: undefined,
  id: 4,
  originalName: 'lstm_LSTM1/lstm_LSTM1',
  name: 'lstm_LSTM1/lstm_LSTM1',
  rank: 3,
  nodeIndex: 0,
  tensorIndex: 0
}
